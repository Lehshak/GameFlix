<!doctype html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.1.3/dist/css/bootstrap.min.css">
    <title>GameFlix Trivia - Analysis</title>
</head>
<style>

  body {
    font-family: Arial, sans-serif;
    margin: 0;
    padding: 0;
    background-color: #f0f0f0;
  }
  .navbar {
    background-color: #333;
    padding: 10px;
    color: white;
    text-align: center;
  }
  .container {
    display: flex;
    justify-content: center;
    margin-top: 20px;
  }
  .movie-part {
    width: 48%;
    background-color: white;
    padding: 20px;
    border-radius: 8px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    cursor: pointer;
    transition: background-color 0.3s ease;
  }
  .movie-part:hover {
    background-color: #e0f7fa;
  }
  .movie-part h3 {
    color: #333;
  }
  .movie-part p {
    color: #555;
    font-size: 14px;
  }
  .comparison {
    text-align: center;
    margin-top: 30px;
    font-size: 18px;
  }
  .comparison p {
    margin: 10px 0;
  }
  .winner {
    font-weight: bold;
    color: green;
  }

  
  body {
    margin: 0;
    padding: 0;
    height: 100vh;
    overflow: hidden;
    --sz: 5px; /*** size ***/
    --sp: 10s; /*** speed ***/
    --b1: #3c3532;
    --b2: #1c1b18;
    --b3: #0c0b0a;
    --b4: #0c0b0ae0;
    --c1: #e399ff;
    --ts: 50%/calc(var(--sz) * 17.5) calc(var(--sz) * 29.5);
    height: 100vh;
    background:
      /* black shadows */
      radial-gradient(circle at 50% 50%, var(--b4) calc(var(--sz) * 1), #fff0 calc(var(--sz) * 8)) var(--ts),
      radial-gradient(circle at 0% 0%, var(--b4) calc(var(--sz) * 1), #fff0 calc(var(--sz) * 8)) var(--ts),
      radial-gradient(circle at 0% 100%, var(--b4) calc(var(--sz) * 1), #fff0 calc(var(--sz) * 8)) var(--ts),
      radial-gradient(circle at 100% 0%, var(--b4) calc(var(--sz) * 1), #fff0 calc(var(--sz) * 8)) var(--ts),
      radial-gradient(circle at 100% 100%, var(--b4) calc(var(--sz) * 1), #fff0 calc(var(--sz) * 8)) var(--ts),
      /* border bottom */
      conic-gradient(from 90deg at 97.5% 67%, var(--c1) 0 87.5deg, #fff0 88deg 100%) var(--ts), /*repeated*/
      conic-gradient(from 90deg at 97.5% 67%, var(--c1) 0 87.5deg, #fff0 88deg 100%) var(--ts),
      conic-gradient(from 182.5deg at 2.5% 67%, #fff0 0 0deg, var(--c1) 0.5deg 90deg, #fff0 0 100%) var(--ts), /*repeated*/
      conic-gradient(from 182.5deg at 2.5% 67%, #fff0 0 0deg, var(--c1) 0.5deg 90deg, #fff0 0 100%) var(--ts), 
      /* border top */
      conic-gradient(from 270deg at 2.5% 33%, var(--c1) 0 87.5deg, #fff0 88deg 100%) var(--ts), /*repeated*/
      conic-gradient(from 270deg at 2.5% 33%, var(--c1) 0 87.5deg, #fff0 88deg 100%) var(--ts),
      conic-gradient(from 2.5deg at 97.5% 33%, #fff0 0 0deg, var(--c1) 0.5deg 90deg, #fff0 0 100%) var(--ts), /*repeated*/
      conic-gradient(from 2.5deg at 97.5% 33%, #fff0 0 0deg, var(--c1) 0.5deg 90deg, #fff0 0 100%) var(--ts),
      /* bottom */
      conic-gradient(from 116.5deg at 50% 85.5%, var(--b1) 0 127deg, #fff0 0 100%) var(--ts), /*repeated*/
      conic-gradient(from 116.5deg at 50% 85.5%, var(--b1) 0 127deg, #fff0 0 100%) var(--ts), /*repeated*/
      conic-gradient(from 116.5deg at 50% 85.5%, var(--b1) 0 127deg, #fff0 0 100%) var(--ts),
      conic-gradient(from 120deg at 50% 83%, var(--c1) 0 120deg, #fff0 0 100%) var(--ts),
      /* top */
      conic-gradient(from -63.5deg at 50% 14.5%, var(--b1) 0 127deg, #fff0 0 100%) var(--ts), /*repeated*/
      conic-gradient(from -63.5deg at 50% 14.5%, var(--b1) 0 127deg, #fff0 0 100%) var(--ts), /*repeated*/
      conic-gradient(from -63.5deg at 50% 14.5%, var(--b1) 0 127deg, #fff0 0 100%) var(--ts),
      conic-gradient(from -60deg at 50% 17%, var(--c1) 0 120deg, #fff0 0 100%) var(--ts),
      /* central gradient */
      conic-gradient(
        from 0deg at 50% 50%, #fff0 0 2deg, 
        var(--b2) 2.5deg 57.5deg, 
        #fff0 58deg 62.5deg, 
        var(--b1) 63deg 117.5deg, 
        #fff0 118deg 122.5deg, 
        var(--b3) 123deg 177.5deg, 
        #fff0 178deg 182deg, 
        var(--b2) 182.5deg 237.5deg, 
        #fff0 0 242.5deg, 
        var(--b1) 243deg 297.5deg, 
        #fff0 298deg 302.5deg, 
        var(--b3) 303deg 357.5deg,
        #fff0 358deg 360deg
      ) var(--ts),
      /* bg */
      var(--c1);
    animation: colors var(--sp) linear 0s infinite;
  }
  
  @keyframes colors {
    100% { filter: hue-rotate(360deg); }
  }

  #comparison-result {
    background-color: white; /* White background */
    padding: 20px; /* Add padding for spacing inside the box */
    margin-top: 20px; /* Optional: Add margin to give some space from the other content */
    width: 80%; /* Make the result box wider (you can adjust the percentage) */
    max-width: 900px; /* Optional: Limit the maximum width for a cleaner look */
    margin-left: auto; /* Center the box horizontally */
    margin-right: auto; /* Center the box horizontally */
    box-sizing: border-box; /* Ensure padding is included in the width */
    border-radius: 8px; /* Optional: rounded corners for a nicer look */
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1); /* Optional: add shadow for a slightly elevated effect */
  }
  

</style>
<body>

  <!-- Navbar -->
  <nav class="navbar navbar-expand-lg navbar-light bg-primary">
      <a class="navbar-brand" href="#">GameFlix Trivia</a>
      <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" id="navbarNav">
        <ul class="navbar-nav">
          <li class="nav-item">
            <a class="nav-link" href="/">Home</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/trivia">Trivia</a>
        </li>
        <li class="nav-item active">
          <a class="nav-link" href="/analysis">MoviePopularityGame</a>
        </li>
          <li class="nav-item">
            <a class="nav-link" href="/games">Games</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/movies">Movies</a>
          </li>
        </ul>
      </div>
    </nav>

  <body>
  
    <!-- Main content container with left and right sections -->
    <div class="container">
      <div id="movie-left" class="movie-part" onclick="pickMovie('left')" 
           data-title="<%= movie1.title %>" 
           data-description="<%= movie1.plot || 'No description available.' %>">
        <h3><%= movie1.title %></h3>
        <p><strong>Description:</strong> <%= movie1.plot || 'No description available.' %></p>
      </div>
    
      <div id="movie-right" class="movie-part" onclick="pickMovie('right')" 
           data-title="<%= movie2.title %>" 
           data-description="<%= movie2.plot || 'No description available.' %>">
        <h3><%= movie2.title %></h3>
        <p><strong>Description:</strong> <%= movie2.plot || 'No description available.' %></p>
      </div>
    </div>
    

    <div class = "container">
      
      <div id="comparison-result">
        <h2>Click on the movie which you think has the highest IMDB rating!</h2>
      </div>
      
    

    </div>
   
    
    <script>
      // Function to pick a movie and display if it's the winner
      function pickMovie(side) {
        const movieLeft = document.getElementById('movie-left');
        const movieRight = document.getElementById('movie-right');
        const ratingWinnerTitle = "<%= rating_winner.title %>"; 


        const lr = movieLeft.getAttribute('data-rating'); // Get the rating from data attribute
        const rr = movieRight.getAttribute('data-rating');
    
        let pickedMovie;
        let winnerMessage = '';
    
        // Determine which movie is picked and get the title dynamically from the data attribute
        if (side === 'left') {
          pickedMovie = movieLeft.getAttribute('data-title'); // Get movie title from data attribute
          movieLeft.style.backgroundColor = "#b2dfdb"; // Light green for selected
          movieRight.style.backgroundColor = "#ffffff"; // Reset right part
        } else {
          pickedMovie = movieRight.getAttribute('data-title'); // Get movie title from data attribute
          movieRight.style.backgroundColor = "#b2dfdb"; // Light green for selected
          movieLeft.style.backgroundColor = "#ffffff"; // Reset left part
        }
    
        // Compare picked movie with rating winner
        if (pickedMovie === ratingWinnerTitle) {
          document.getElementById('comparison-result').innerHTML = `
            <h2>Result:</h2>
            <p class="winner">${pickedMovie} is the winner!</p>
            <p>You picked the movie with the higher rating.</p>
            <a href="/analysis">
            <h1>Restart?</h1>
        </a>
          `;
        } else {
          document.getElementById('comparison-result').innerHTML = `
            <h2>Result:</h2>
            <p class="winner">You lost! The movie with the higher rating was ${ratingWinnerTitle}.</p>
            <p>Better luck next time!</p>
            <a href="/analysis">
            <h1>Restart?</h1>
        </a>
          `;
        }
      }
    </script>

  </body>

  <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/popper.js@1.14.3/dist/umd/popper.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.1.3/dist/js/bootstrap.min.js"></script>

</body>
</html>